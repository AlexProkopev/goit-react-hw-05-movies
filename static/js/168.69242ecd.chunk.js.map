{"version":3,"file":"static/js/168.69242ecd.chunk.js","mappings":"sPACA,GAAgB,eAAiB,gCAAgC,YAAc,6BAA6B,WAAa,4BAA4B,MAAQ,uBAAuB,SAAW,0BAA0B,WAAa,6B,oCCsEtO,EAjEgB,WAEd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAGRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA8BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,EAAa,sCAAAC,OAAyCjB,EAAO,qEAEnEkB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEG,OAFHF,EAAAC,KAAA,EAEhBf,GAAa,GAAMc,EAAAE,KAAA,EAEIC,EAAAA,EAAAA,IAAUZ,GAAe,KAAD,EAAzCQ,EAAQC,EAAAI,KACdC,QAAQC,IAAIP,EAASQ,KAAKC,SAE1B1B,EAAWiB,EAASQ,KAAKC,SAASR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAGlCV,EAAWU,EAAAS,GAAMC,QACjBC,IAAAA,OAAAA,QAAwB,mKAAiC,QAErC,OAFqCX,EAAAC,KAAA,GAEzDf,GAAa,GAAOc,EAAAY,OAAA,6BAAAZ,EAAAa,OAAA,GAAAf,EAAA,wBAEvB,kBAfgB,OAAAH,EAAAmB,MAAA,KAAAC,UAAA,KAgBjBrB,GACF,GAAG,CAACH,IAMJ,OACCyB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAEEjC,IAAakC,EAAAA,EAAAA,KAACC,EAAAA,QAAM,IACpB/B,IAAW8B,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oFACfrC,EAAQwC,OAAS,GAAIF,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAAA,MAAUL,SAAC,aAAeC,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAAA,MAAUL,SAAC,+GACzFC,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAAA,eAAmBL,SAEhCrC,EAAQ2C,KAAI,SAAAC,GACX,OACCT,EAAAA,EAAAA,MAAA,OAAKM,UAAWC,EAAAA,YAAgBL,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OACQG,UAAWC,EAAAA,WACbG,IACED,EAAOE,eAAeC,YAAW,mCAAApC,OACMiC,EAAOE,eAAeC,aAlBzE,iIAqBUC,IAAI,MAEPb,EAAAA,EAAAA,MAAA,KAAGM,UAAWC,EAAAA,UAAcL,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAMG,UAAWC,EAAAA,SAAaL,SAAC,UAAY,IAAEO,EAAOK,WAClFd,EAAAA,EAAAA,MAAA,KAAGM,UAAWC,EAAAA,QAAYL,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAMG,UAAWC,EAAAA,WAAeL,SAAC,YAAc,IAAEO,EAAOM,aAGvF,QAIN,C","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapperRewievs\":\"Reviews_wrapperRewievs__OHTkq\",\"wrapperCard\":\"Reviews_wrapperCard__JPis5\",\"imgRewievs\":\"Reviews_imgRewievs__9BuRu\",\"title\":\"Reviews_title__t265C\",\"spanName\":\"Reviews_spanName__LQ4qC\",\"spanRewiev\":\"Reviews_spanRewiev__AaLF6\"};","import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport css from \"./Reviews.module.css\"\nimport Notiflix from 'notiflix';\nimport Loader from 'components/Loader/Loader';\nconst Reviews = () => {\n\n  const { movieId } = useParams();\n\n\n  const [rewievs, setRewievs] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const currentMovies = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&api_key=e9b50bda4ce56f3b360f447ed6508c77`;\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setisLoading(true);\n\n        const response = await axios.get(currentMovies);\n        console.log(response.data.results);\n\n        setRewievs(response.data.results);\n        \n      } catch (error) {\n        setIsError(error.mesage);\n        Notiflix.Notify.Failure('Не удалось выполнить операцию');\n      } finally {\n        setisLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [currentMovies]);\n\n  const defaultImg =\n    'https://rgo.ru/upload/content_block/images/9ca8302358b777e143cd6e314058266b/7065323d0aa2e3fa6e8764c4f57f1655.jpg?itok=sawvdjq3';\n\n\n  return (\n   <>\n   \n    {isLoading && <Loader />}\n    {isError && <h4>Ошибка сервера</h4>}\n    {rewievs.length > 0 ? <h2 className={css.title}>Rewievs</h2> : <h2 className={css.title}>Пока что отзывов нет</h2>}\n    <div className={css.wrapperRewievs}>\n      \n      {rewievs.map(rewiev => {\n        return (\n         <div className={css.wrapperCard}>\n        <img\n                className={css.imgRewievs}\n              src={\n                rewiev.author_details.avatar_path\n                  ? `https://image.tmdb.org/t/p/w500/${rewiev.author_details.avatar_path}`\n                  : defaultImg\n              }\n              alt=\"\"\n            />\n           <p className={css.titleName}><span className={css.spanName}>Name:</span> {rewiev.author}</p>\n          <p className={css.content}><span className={css.spanRewiev}>Rewiev:</span> {rewiev.content}</p>\n         </div>\n        )\n      })}\n    </div>\n    </>\n  )\n}\n\nexport default Reviews"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","rewievs","setRewievs","_useState3","_useState4","isLoading","setisLoading","_useState5","_useState6","isError","setIsError","currentMovies","concat","useEffect","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","console","log","data","results","t0","mesage","Notiflix","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","length","className","css","map","rewiev","src","author_details","avatar_path","alt","author","content"],"sourceRoot":""}