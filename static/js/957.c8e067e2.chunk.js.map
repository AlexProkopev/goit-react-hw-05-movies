{"version":3,"file":"static/js/957.c8e067e2.chunk.js","mappings":"0NACA,EAA+B,mCAA/B,EAAgI,sCAAhI,EAAoL,kC,oCCCvKA,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,EAAYC,EAAgBC,EAAUC,GAAY,IAAAC,EAAA,OAAAN,IAAAA,MAAA,SAAAO,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAE7D,OAF6DF,EAAAC,KAAA,EAE/EN,GAAY,GAAMK,EAAAE,KAAA,EAEKC,EAAAA,EAAAA,IAAUL,GAAc,KAAD,EAAxCC,EAAQC,EAAAI,KAEdR,EAAgBG,EAASM,MAAML,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE/BH,EAAUG,EAAAM,GAAMC,QAAQ,QAEL,OAFKP,EAAAC,KAAA,GAExBN,GAAY,GAAOK,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAf,EAAA,wBAEtB,gBAZsBgB,EAAAC,EAAAC,EAAAC,GAAA,OAAAtB,EAAAuB,MAAA,KAAAC,UAAA,KCDzB,EAAuF,yCAAvF,EAAwI,qCAAxI,EAA2L,2CAA3L,EAA0W,uC,SCgC1W,EA9B6B,SAAHxB,GAA4B,IAAvByB,EAAKzB,EAALyB,MAAMC,EAAU1B,EAAV0B,WACnC,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACKC,EAAAA,EAAAA,KAAA,OACCC,UAAWC,EACXC,IACEP,EAAMQ,YACF,kCAAoCR,EAAMQ,YAC1CP,EAENQ,IAAI,MAENL,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAUH,SAAEH,EAAMU,kBACjCN,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAgBH,SAAEH,EAAMW,YACtCP,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAgBH,SAAEH,EAAMY,gBACtCR,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAgBH,SACV,IAAjBH,EAAMa,QACLb,EAAMc,OAAOC,KAAI,SAACC,EAAIC,GAAK,OACzBf,EAAAA,EAAAA,MAAA,QAAkBG,UAAWC,EAAYH,SAAA,CACtCa,EAAGE,KAAK,MADAD,EAEJ,QAKrB,EClBME,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,0BAA8B,IAChDC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,oDAAoC,IACzDE,GAASF,EAAAA,EAAAA,OAAK,kBAAM,qCAAkC,IA+C5D,EA7CqB,WAAO,IAADG,EAAAC,EACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/B3B,EAAK6B,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA8BR,EAAAA,EAAAA,WAAS,GAAMS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAA2B,QAArBpB,EAAe,QAAfC,EAACgB,EAASI,aAAK,IAAApB,OAAA,EAAdA,EAAgBqB,YAAI,IAAAtB,EAAAA,EAAI,KAC9CuB,EAAa,sCAAAC,OAAyCtB,EAAO,6CAQnE,OAJAuB,EAAAA,EAAAA,YAAU,WACR1E,EAAa6D,EAAcJ,EAAUQ,EAAYO,EACnD,GAAG,CAACf,EAAUe,KAGZ5C,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC6C,EAAAA,GAAI,CAACC,GAAIR,EAAaS,QAAS9C,UAAWC,EAAoBH,SAAC,YAG/D+B,IAAa9B,EAAAA,EAAAA,KAACkB,EAAM,IACpBgB,IAAWlC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qFAChBC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiBH,UAC/BC,EAAAA,EAAAA,KAACgD,EAAoB,CAACpD,MAAOA,EAAOC,WAdxC,sIAgBEC,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAgBH,SAAA,EAC9BC,EAAAA,EAAAA,KAACiD,EAAAA,GAAO,CAACH,GAAG,OAAO7C,UAAWC,EAAoBH,SAAC,UAGnDC,EAAAA,EAAAA,KAACiD,EAAAA,GAAO,CAACH,GAAG,UAAU7C,UAAWC,EAAoBH,SAAC,gBAIxDC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACkD,EAAAA,SAAQ,CAACC,UAAUnD,EAAAA,EAAAA,KAACkB,EAAM,IAAInB,UAC7BD,EAAAA,EAAAA,MAACsD,EAAAA,GAAM,CAAArD,SAAA,EACLC,EAAAA,EAAAA,KAACqD,EAAAA,GAAK,CAACC,KAAK,OAAOC,SAASvD,EAAAA,EAAAA,KAACe,EAAI,OACjCf,EAAAA,EAAAA,KAACqD,EAAAA,GAAK,CAACC,KAAK,UAAUC,SAASvD,EAAAA,EAAAA,KAACiB,EAAO,eAMnD,C","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","services/fetchDetails.js","webpack://react-homework-template/./src/components/MovieDetalsComponent/MovieDetailsComponent.module.css?6b0a","components/MovieDetalsComponent/MovieDetalsComponent.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapperMovie\":\"MovieDetails_wrapperMovie__Nj4ri\",\"imgPoster\":\"MovieDetails_imgPoster__U5M2k\",\"linkCastRewievs\":\"MovieDetails_linkCastRewievs__ACbxb\",\"wrapperLink\":\"MovieDetails_wrapperLink__RqOdW\",\"spanMap\":\"MovieDetails_spanMap__UrpTi\"};","import axios from \"axios\";\n\nexport const fetchDetails = async (setisLoadin,setMovieDetails,setIsErro,currentMovie) => {\n    try {\n      setisLoadin(true);\n\n      const response = await axios.get(currentMovie);\n\n      setMovieDetails(response.data);\n    } catch (error) {\n      setIsErro(error.mesage);\n    } finally {\n      setisLoadin(false);\n    }\n  };","// extracted by mini-css-extract-plugin\nexport default {\"wrapperMovie\":\"MovieDetailsComponent_wrapperMovie__Ncsy9\",\"imgPoster\":\"MovieDetailsComponent_imgPoster__oWRz8\",\"title\":\"MovieDetailsComponent_title__BdDBo\",\"description\":\"MovieDetailsComponent_description__3KLDi\",\"linkCastRewievs\":\"MovieDetailsComponent_linkCastRewievs__qzKa1\",\"wrapperLink\":\"MovieDetailsComponent_wrapperLink__sVGc-\",\"spanMap\":\"MovieDetailsComponent_spanMap__H38G2\"};","import React from 'react'\nimport css from \"./MovieDetailsComponent.module.css\"\n\nconst MovieDetalsComponent = ({movie,defaultImg}) => {\n  return (\n    <div>\n         <img\n          className={css.imgPoster}\n          src={\n            movie.poster_path\n              ? 'https://image.tmdb.org/t/p/w500' + movie.poster_path\n              : defaultImg\n          }\n          alt=\"\"\n        />\n        <h2 className={css.title}>{movie.original_title}</h2>\n        <h2>Description:</h2>\n        <p className={css.description}>{movie.overview}</p>\n        <h2>Rating:</h2>\n        <p className={css.description}>{movie.vote_average}</p>\n        <h2>Genre:</h2>\n        <p className={css.description}>\n          {movie.length !== 0 &&\n            movie.genres.map((el, index) => (\n              <span key={index} className={css.spanMap}>\n                {el.name}.\n              </span>\n            ))}\n        </p>\n    </div>\n  )\n}\n\nexport default MovieDetalsComponent","import React, { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport css from './MovieDetails.module.css';\nimport { fetchDetails } from 'services/fetchDetails';\nimport MovieDetalsComponent from 'components/MovieDetalsComponent/MovieDetalsComponent';\n\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\nconst Loader = lazy(() => import('components/Loader/Loader'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const location = useLocation();\n  const locationBack = useRef(location.state?.from ?? '/');\n  const currentMovies = `https://api.themoviedb.org/3/movie/${movieId}?api_key=e9b50bda4ce56f3b360f447ed6508c77`;\n  const defaultImg =\n    'https://rgo.ru/upload/content_block/images/9ca8302358b777e143cd6e314058266b/7065323d0aa2e3fa6e8764c4f57f1655.jpg?itok=sawvdjq3';\n\n  useEffect(() => {\n    fetchDetails(setisLoading, setMovie, setIsError, currentMovies);\n  }, [setMovie, currentMovies]);\n\n  return (\n    <div>\n      <Link to={locationBack.current} className={css.linkCastRewievs}>\n        Go back\n      </Link>\n      {isLoading && <Loader />}\n      {isError && <h4>Ошибка сервера</h4>}\n      <div className={css.wrapperMovie}>\n        <MovieDetalsComponent movie={movie} defaultImg={defaultImg} />\n      </div>\n      <div className={css.wrapperLink}>\n        <NavLink to=\"cast\" className={css.linkCastRewievs}>\n          Cast\n        </NavLink>\n        <NavLink to=\"rewievs\" className={css.linkCastRewievs}>\n          Rewievs\n        </NavLink>\n      </div>\n      <div>\n        <Suspense fallback={<Loader />}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast />} />\n            <Route path=\"rewievs\" element={<Reviews />} />\n          </Routes>\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["fetchDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","setisLoadin","setMovieDetails","setIsErro","currentMovie","response","_context","prev","next","axios","sent","data","t0","mesage","finish","stop","_x","_x2","_x3","_x4","apply","arguments","movie","defaultImg","_jsxs","children","_jsx","className","css","src","poster_path","alt","original_title","overview","vote_average","length","genres","map","el","index","name","Cast","lazy","Reviews","Loader","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","isLoading","setisLoading","_useState5","_useState6","isError","setIsError","location","useLocation","locationBack","useRef","state","from","currentMovies","concat","useEffect","Link","to","current","MovieDetalsComponent","NavLink","Suspense","fallback","Routes","Route","path","element"],"sourceRoot":""}